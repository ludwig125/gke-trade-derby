version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.6.1
  gcp-gke: circleci/gcp-gke@0.2.0
executors:
  golang:
    docker:
    - image: circleci/golang:1.12.2-browsers
      user: root
    environment:
    - GO111MODULE: "on"

jobs:
  # 事前にもろもろのダウンロードなどを済ませておくジョブ
  setup:
    executor:
      name: golang
    steps:
      - checkout
      # もし前回のWorkflow時に保存したキャッシュが利用できるなら再利用する
      - restore_cache:
          name: Restore go modules cache
          keys:
              - v1-mod-{{ .Branch }}-{{ checksum "go.mod" }}
      - run:
          name: Vendoring
          command: go mod download
      # ダウンロードしたmoduleをCircleCIにキャッシュとして保存しておく
      - save_cache:
          name: Save go modules cache
          key: v1-mod-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
              - /go/pkg/mod/cache
      - persist_to_workspace:
          root: /go
          paths:
            - src
            - bin
            - pkg/mod/cache

  test:
    executor: golang
    steps:
      - checkout
      - attach_workspace:
          at: /go
      - run:
          name: build
          command: go build
      - run:
          name: test
          command: APPUSER=user APPPASS=123 TRADEDERBY_SHEETID=123 CREDENTIAL_FILEPATH=./test/test-serviceaccount.json go test -v ./...
  Build-Push-Image-Docker:
    description: Build and push image to Google Container Registry
    machine: true
    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: trade-derby
          tag: $CIRCLE_SHA1
      - gcp-gcr/push-image:
          image: trade-derby
          tag: $CIRCLE_SHA1
      - gcp-gcr/tag-image:
          image: trade-derby
          source-tag: $CIRCLE_SHA1
          target-tag: latest
 
  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps:
      # checkout project source code into the job’s working_directory
      - checkout
      # Echo CIRCLE_SHA1. this is not necessary
      - run:
          name: Echo CIRCLE_SHA1
          command: |
            echo $CIRCLE_SHA1
      # Install `gcloud` and `kubectl` if not already installed.
      - gcp-gke/install
      # Initialize the `gcloud` CLI.
      - gcp-gke/init
      # # Update a deployment Docker image.
      # - gcp-gke/rollout-image:
      #     cluster: trade-derby-small-cluster
      #     deployment: trade-derby-web
      #     container: trade-derby-web
      #     image: gcr.io/${GOOGLE_PROJECT_ID}/trade-derby:latest
      - run:
          name: Install kustomize
          command: |
            opsys=linux  # or darwin, or windows
            curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases |\
                grep browser_download |\
                grep $opsys |\
                cut -d '"' -f 4 |\
                head -n 1 |\
                xargs curl -O -L
            mv kustomize_*_${opsys}_amd64 kustomize
            chmod u+x kustomize
      - run:
          name: Create secret
          command: |
            echo -n ${TRADEDERBY_USERNAME} > ./kubernetes/base/username.txt
            echo -n ${TRADEDERBY_PASSWORD} | base64 -d > ./kubernetes/base/password.txt
            echo -n ${TRADEDERBY_SHEETID} > ./kubernetes/base/tradederby_sheetid.txt
            echo -n ${TRADEDERBY_SPREADSHEET_SERVICEACCOUNT} | base64 -d  > ./kubernetes/base/gke-trade-derby-serviceaccount.json
      - deploy:
          name: Kustomize build and Apply
          command: |
            ./kustomize build ./kubernetes/overlays/dev/ | /usr/local/bin/kubectl apply -f -
            sh kubernetes/overlays/patch.sh "dev-trade-derby"

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - Build-Push-Image-Docker:
          requires:
            - test
      - deploy:
          requires:
          - Build-Push-Image-Docker
          filters:
            branches:
              only:
                - master


