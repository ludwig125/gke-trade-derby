version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.6.1
  gcp-gke: circleci/gcp-gke@0.2.0
executors:
  golang:
    docker:
    - image: circleci/golang:1.12
  # gcloud:
  #   docker:
  #   - image: google/cloud-sdk:251.0.0-alpine
jobs:
  test:
    executor: golang
    steps:
      - checkout
      - run:
          name: build
          command: go build
      - run:
          name: test
          command: go test
  Build-Push-Image-Docker:
    description: Build and push image to Google Container Registry
    machine: true
    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: trade-derby
          tag: $CIRCLE_SHA1
      - gcp-gcr/push-image:
          image: trade-derby
          tag: $CIRCLE_SHA1
      - gcp-gcr/tag-image:
          image: trade-derby
          source-tag: $CIRCLE_SHA1
          target-tag: latest
  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps:
      # checkout project source code into the jobâ€™s working_directory
      - checkout
      # Echo CIRCLE_SHA1. this is not necessary
      - run:
          name: Echo CIRCLE_SHA1
          command: |
            echo $CIRCLE_SHA1
      # Install `gcloud` and `kubectl` if not already installed.
      - gcp-gke/install
      # Initialize the `gcloud` CLI.
      - gcp-gke/init
      # Update a deployment Docker image.
      - gcp-gke/rollout-image:
          cluster: trade-derby-small-cluster
          deployment: trade-derby-web
          container: trade-derby-web
          image: gcr.io/${GOOGLE_PROJECT_ID}/trade-derby:latest
      - run:
          name: Install kustomize
          command: |
            opsys=linux  # or darwin, or windows
            curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases |\
                grep browser_download |\
                grep $opsys |\
                cut -d '"' -f 4 |\
                head -n 1 |\
                xargs curl -O -L
            mv kustomize_*_${opsys}_amd64 kustomize
            chmod u+x kustomize
      - deploy:
          name: Kustomize build and Apply
          command: |
            #./kubernetes/overlays/dev/build_deploy.sh "trade-derby:${CIRCLE_SHA1}"
            ./kustomize build ./kubernetes/overlays/dev/ | /usr/local/bin/kubectl apply -f -
            sh kubernetes/overlays/patch.sh "dev-trade-derby"
  # deploy:
  #   working_directory: /app
  #   environment:
  #     PROJECT_NAME: gke-trade-derby
  #     CLUSTER_NAME: trade-derby-small-cluster
  #     CLOUDSDK_COMPUTE_ZONE: us-west1-c
  #   executor: gcloud
  #   steps:
      # - checkout
      # - setup_remote_docker
      # - restore_cache:
      #     keys:
      #       - v1-{{ .Branch }}
      #     paths:
      #       - /caches/app.tar
      # - run:
      #     name: Install dependencies
      #     command: |
      #       apk add --update --no-cache gettext
      #       gcloud components install kubectl
      # - run:
      #     name: Install Docker client
      #     command: |
      #       set -x
      #       VER="17.05.0-ce"
      #       curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      #       tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #       mv /tmp/docker/* /usr/bin
      # - run:
      #     name: Check docker version
      #     command: |
      #       docker version
      # - run:
      #     name: Load Docker image layer cache
      #     command: |
      #       set +o pipefail
      #       docker load -i /caches/app.tar | true
      # - run:
      #     name: Build application Docker image
      #     command: |
      #       docker build --cache-from=gcr.io/${PROJECT_NAME}/trade-derby:latest -t gcr.io/${PROJECT_NAME}/trade-derby:$CIRCLE_SHA1 .
      #       docker tag gcr.io/${PROJECT_NAME}/trade-derby:$CIRCLE_SHA1 gcr.io/${PROJECT_NAME}/trade-derby:latest
      # - run:
      #     name: Save Docker image layer cache
      #     command: |
      #       mkdir -p /caches
      #       docker save -o /caches/app.tar gcr.io/${PROJECT_NAME}/trade-derby:latest
      # - save_cache:
      #     key: v1-{{ .Branch }}-{{ epoch }}
      #     paths:
      #       - /caches/app.tar
      # - deploy:
      #     name: Deploy application Docker image
      #     command: |
      #       echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/account-auth.json
      #       gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
      #       gcloud config set project $PROJECT_NAME
      #       gcloud --quiet config set container/cluster $CLUSTER_NAME
      #       gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
      #       gcloud --quiet container clusters get-credentials $CLUSTER_NAME
      #       gcloud config set container/use_client_certificate True
      #       ./deploy.sh

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - Build-Push-Image-Docker:
          requires:
            - test
      - deploy:
          requires:
          - Build-Push-Image-Docker
          filters:
            branches:
              only:
                - master
      #- deploy

